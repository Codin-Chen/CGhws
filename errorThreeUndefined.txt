<!DOCTYPE html>
<html>
<head>
<style>
body {
	overflow: hidden
}
</style>
</head>
<body>

<scritp src="https://threejs.org/build/three.min.js"></script>
<script src="https://threejs.org/examples/js/controls/OrbitControls.js"></script>
<script src="https://code.jquery.com/jquery-2.1.4.min.js"></script>

<button id='ToggleVisible'> Press Me </button>

<script>
$('#ToggleVisible').click ( function() {
	showCube = ! showCube; // toggle;
});

var renderer, camera, scene;
var cube;
var showCube = true;

init();
animate();

function init(){

	renderer = new THREE.WebGLRenderer ();
	document.body.appendChild (renderer.domElement);
	var width = window.innerWidth;
	var height = window.innerHeight;
	renderer.setSize (width, height);
	
	renderer.setClearColor (0x888888);

	scene = new THREE.Scene();
	var grid = new THREE.GridHelper(20,20, 0xaaaa00, 0x333333);
	scene.add (grid);
	var axes = new THREE.AxesHelper (5);
	scene.add (axes);
	
	camera = new THREE.PerspectiveCamera(35, width/height, 1, 100);
	camera.position.y = 16;
	camera.position.z = 40; 
	camera.lookAt(new THREE.Vector3(0,0,0));
	
	let controls = new THREE.OrbitControls(camera, renderer.domElement);
	
	window.addEventListener('resize', onWindowResize, false);
	///////////////////////////////////////////////////////////////
	var cubeGeometry = new THREE.CylinderGeometry (5,5,3,20);
	var cubeMaterial = new THREE.MeshNormalMaterial();
	cube = new THREE.Mesh (cubeGeometry, cubeMaterial);
	scene.add (cube);

}

function onWindowResize() {

	var width = window.innerWidth;
	var height = window.innerHeight;
	camera.aspect = width / height;
	camera.updateProjectionMartrix();
	renderder.setSize(width,height);

}
	


function animate() {
	
	requestAnimationFrame( animate );
	render();
	
}

function render() {

	renderder.render(scene, camera);
	cube.material.visible = showcube;

}
//
</script>

</body>
</html>